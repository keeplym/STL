move() 算法会将它的前两个输入迭代器参数指定的序列移到第三个参数定义的目的序列的开始位置，第三个参数必须是输出迭代器。
这个算法返回的迭代器指向最后一个被移动到目的序列的元素的下一个位置。

这是一个移动操作，因此无法保证在进行这个操作之后，输入序列仍然保持不变；源元素仍然会存在，但它们的值可能不再相同了，因此在移动之后，就不应该再使用它们。
如果源序列可以被替换或破坏，就可以选择使用 move() 算法。如果不想扰乱源序列，可以使用 copy() 算法。下面是一个展示如何使用它的示例：

	std::vector<int> srce {1, 2, 3, 4};
	std::deque<int> dest {5, 6, 7, 8};
	std::move(std::begin(srce), std::end(srce), std::back_inserter(dest));